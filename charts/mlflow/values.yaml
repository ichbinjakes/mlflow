# mlflow helm chart to deploy a tracking server 

nameOverride: ""
fullnameOverride: ""


image:
  ## @param image.repository mlflow image repository
  repository: mlflow/mlflow
  ## @param image.tag mlflow image tag (default is the chart <appVersion>-<artifact storage type>.)
  tag: ""
  ## @param image.pullPolicy image pull policy
  pullPolicy: IfNotPresent
  ## @param image.pullSecrets private registry image pull secrets
  pullSecrets: []
  # - name: <secret-name>


trackingServer:
  ## @param trackingServer.enabled enable experiment tracking feature. If set to false mlflow server is started with --artifacts-only
  enabled: true
  ## @param trackingServer.port override the default port to serve on (5000)
  port: 5000
  ## @param trackingServer.workers override the default number of workers (4)
  workers: ""
  ## @param trackingServer.metrics enable prometheus metrics at /metrics
  metrics: true


backendStore:
  ## @param artifacts.sftp.existingSecret secret name containing sqlalchemy connection uri
  ## This secret must contain the key `BACKEND_STORE_URI`
  existingSecret: ""


artifacts:
  ## @param artifacts.serve Enables serving of artifact uploads, downloads, and list requests by routing these requests to the artifact stoorage service
  serve: true
  s3:
    ## @param artifacts.s3.defaultArtifactRoot the default S3 artifact root. e.g. s3://mlflow
    defaultArtifactRoot: ""
    ## @param artifacts.s3.existingSecret secret name containing credentials to access artifact storage on AWS S3 or MINIO
    ## This secret must contain the keys `AWS_ACCESS_KEY_ID` and `AWS_SECRET_ACCESS_KEY`
    ## This secret can optionally contain the keys `MLFLOW_S3_UPLOAD_EXTRA_ARGS`, `MLFLOW_S3_ENDPOINT_URL`, `AWS_DEFAULT_REGION`
    ## The optional key `MLFLOW_S3_IGNORE_TLS` can be specified if the caBundleSecret isn't used
    existingSecret: ""
    ## @param artifacts.s3.caBundleSecret secret name containing a certificate for TLS connection
    ## This secret must contain the key ca-bundle.pem
    caBundleSecret: ""

  gcp:
    ## @param artifacts.gcp.defaultArtifactRoot the default GCP Storage artifact root. e.g. gs://mlflow
    defaultArtifactRoot: ""
    ## @param artifacts.gcp.existingSecret secret name containing credentials to access artifact storage on GCP
    ## This secret must contain the key `keyfile.json`
    ## This secret can optionally declare `MLFLOW_GCS_DEFAULT_TIMEOUT`, `MLFLOW_GCS_UPLOAD_CHUNK_SIZE` or `MLFLOW_GCS_DOWNLOAD_CHUNK_SIZE`
    existingSecret: ""

  azure:
    ## @param artifacts.azure.existingSecret secret name containing credentials to access artifact storage on AZURE
    ## This secret must contain the keys `AZURE_STORAGE_CONNECTION_STRING` and `AZURE_STORAGE_ACCESS_KEY`
    existingSecret: ""

  ftp:
    ## @param artifacts.ftp.existingSecret secret name containing credentials to access artifact storage via ftp
    ## This secret must contain the key `DEFAULT_ARTIFACT_ROOT` e.g. ftp://user:pass@host/path/to/dir
    existingSecret: ""
  
  sftp:
    ## @param artifacts.sftp.defaultArtifactRoot the default S3 artifact root. e.g. sftp://user@host/path/to/dir
    defaultArtifactRoot: ""
    ## @param artifacts.sftp.existingSecret secret name containing credentials to access artifact storage via SFTP
    ## This secret must contain the key `DEFAULT_ARTIFACT_ROOT` and `identity-file.pem`
    existingSecret: ""


## @param client.replicaCount Number of mlflow server replicas to deploy
replicaCount: 1


serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
